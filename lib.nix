{ pkgs, lib }:
let

    script-msg = ''
        # This script was generated by Nix.
        # To make changes edit the `tasks.nix` file.

    '';

    help-task-name = "task-help";

    taskScriptString = task: level: ''
        echo "${ lib.strings.replicate level "--" }->> Running '${task.name}'"
        # Dependencies for ${task.name}
        ${builtins.concatStringsSep "\n" (map (j: taskScriptString j (level+1)) task.depends)}
        # Run ${task.name} task
        ${task.script}
    '';

    tab-indent = s: (if s == "" then "" else "\t") + (builtins.concatStringsSep "\n\t" (
        builtins.filter (e: builtins.typeOf e != "list") (builtins.split "\n" s)
    ));

    _mkScript = write_script: task: write_script task.name (script-msg + (taskScriptString task 0));

in
rec {

    mkScriptBin = _mkScript pkgs.writeShellScriptBin;
    mkScript    = _mkScript pkgs.writeShellScript;

    mkScripts = tasks: lib.attrsets.mapAttrsToList (_: j: mkScriptBin j) tasks;

    mkMakefile = tasks: pkgs.writeText "Makefile" (''
        # This Makefile was generated by Nix.
        # To make changes edit the `tasks.nix` file.

        main: ${help-task-name}

        all: ${ builtins.concatStringsSep " " (map (j: "${j.name}") tasks) }

        ${help-task-name}:
        ${ tab-indent /*bash*/ ''
            @echo "usage: make <task>"
            @echo ""
            @echo "Available Tasks:"
            ${ (builtins.concatStringsSep "\n" (map (j:  "@echo -e '\t${j.name}'") tasks)) }
            @echo -e "\nUse 'make ${help-task-name}' command to show this list."
        ''}

    '' +
        (builtins.concatStringsSep "\n\n" (map (task: ''
            ${task.name}: ${ builtins.concatStringsSep " " (map (j: "${j.name}") task.depends) }
            ${
                if task.script == "" then "" else "\t"
            }${
                builtins.concatStringsSep "\n\t" (
                    builtins.filter (e: builtins.typeOf e != "list") (builtins.split "\n" task.script)
                )}
        '') tasks))
    );

    mkHelpScriptBin = tasks: pkgs.writeShellScriptBin "${help-task-name}" ''
        echo "Available Tasks:"
        ${ builtins.concatStringsSep "\n" (map (j:  "echo -e '\t${j.name}'") ( builtins.attrValues tasks )) }
        echo -e "\nUse '${help-task-name}' command to show this list."
    '';

    mkTask = name: { script ? "", depends ? [], }: {
        name = name;
        script = script;
        depends = depends;
    };

    mkSeq = name: seq: mkTask name { depends = seq; };

}
